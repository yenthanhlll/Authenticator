/*     */ package WEB-INF.classes.com.dreammirae.mmth.web.controller.view.rest;
/*     */ 
/*     */ import com.dreammirae.mmth.config.Commons;
/*     */ import com.dreammirae.mmth.db.DatabaseAccess;
/*     */ import com.dreammirae.mmth.misc.I18nMessage;
/*     */ import com.dreammirae.mmth.vo.bean.RestResponse;
/*     */ import com.dreammirae.mmth.vo.bean.SqlResult;
/*     */ import java.sql.SQLException;
/*     */ import org.springframework.jdbc.core.ConnectionCallback;
/*     */ import org.springframework.web.bind.annotation.RequestMapping;
/*     */ import org.springframework.web.bind.annotation.RequestMethod;
/*     */ import org.springframework.web.bind.annotation.RequestParam;
/*     */ import org.springframework.web.bind.annotation.RestController;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ @RestController
/*     */ @RequestMapping(value = {"/web/manager/sql/rest"}, method = {RequestMethod.POST})
/*     */ public class SQLController
/*     */ {
/*     */   private static final String REGEX_QUERY = "^SELECT.*";
/*     */   private static final String REGEX_EXECUTE = "^(INSERT|UPDATE|DELETE|CREATE|ALTER|DROP).*";
/*     */   
/*     */   @RequestMapping({"/query"})
/*     */   private RestResponse query(@RequestParam("query") String query) {
/*  42 */     RestResponse resp = new RestResponse();
/*  43 */     String sql = query.trim().toUpperCase();
/*     */     
/*  45 */     if (!sql.matches("^SELECT.*")) {
/*  46 */       resp.addContextMessage("query", new I18nMessage("validate.invalidQuery", new Object[] { query, "It is not SELECT statement." }));
/*  47 */       return resp;
/*     */     } 
/*     */     
/*  50 */     DatabaseAccess da = Commons.ctx.getDatabaseAccess();
/*     */     
/*  52 */     SqlResult result = new SqlResult();
/*     */ 
/*     */     
/*     */     try {
/*  56 */       da.doInConnection((ConnectionCallback)new Object(this, query, result));
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */       
/* 130 */       resp.addData("result", result);
/* 131 */     } catch (SQLException e) {
/* 132 */       resp.addContextMessage("query", new I18nMessage("validate.invalidQuery", new Object[] { query, e.getMessage() }));
/*     */     } 
/*     */ 
/*     */     
/* 136 */     return resp;
/*     */   }
/*     */ 
/*     */ 
/*     */   
/*     */   @RequestMapping({"/execute"})
/*     */   private RestResponse execute(@RequestParam("query") String query) {
/* 143 */     RestResponse resp = new RestResponse();
/* 144 */     String sql = query.trim().toUpperCase();
/*     */     
/* 146 */     if (!sql.matches("^(INSERT|UPDATE|DELETE|CREATE|ALTER|DROP).*")) {
/* 147 */       resp.addContextMessage("query", new I18nMessage("validate.invalidQuery", new Object[] { query, "It is not INSERT, UPDATE, or DELETE statement." }));
/* 148 */       return resp;
/*     */     } 
/*     */ 
/*     */     
/* 152 */     DatabaseAccess da = Commons.ctx.getDatabaseAccess();
/*     */     
/* 154 */     SqlResult result = new SqlResult();
/*     */ 
/*     */     
/*     */     try {
/* 158 */       da.doInConnection((ConnectionCallback)new Object(this, query, result));
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */       
/* 169 */       resp.addData("result", result);
/*     */     }
/* 171 */     catch (SQLException e) {
/* 172 */       resp.addContextMessage("query", new I18nMessage("validate.invalidQuery", new Object[] { query, e.getMessage() }));
/*     */     } 
/*     */     
/* 175 */     return resp;
/*     */   }
/*     */ 
/*     */   
/*     */   public static void main(String[] args) {
/* 180 */     String str = "CREATE TABLE MMTH_IssueCodeData ( ";
/* 181 */     str = str + "id int NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1), ";
/* 182 */     str = str + "username VARCHAR(128) NOT NULL, ";
/* 183 */     str = str + "authType INT NOT NULL, ";
/* 184 */     str = str + "issueCodeData VARCHAR(128) NOT NULL, ";
/* 185 */     str = str + "tsLifeTime BIGINT NOT NULL )";
/*     */     
/* 187 */     System.out.println(str.matches("^(INSERT|UPDATE|DELETE|CREATE|ALTER|DROP).*"));
/* 188 */     System.out.println(str);
/*     */   }
/*     */ }


/* Location:              D:\Authenticator\Authenticator-main\ROOT.jar!\WEB-INF\classes\com\dreammirae\mmth\web\controller\view\rest\SQLController.class
 * Java compiler version: 7 (51.0)
 * JD-Core Version:       1.1.3
 */